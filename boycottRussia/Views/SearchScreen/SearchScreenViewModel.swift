//
//  MainVM.swift
//  boycottRussia
//
//  Created by Oleksii Irzhavskyi on 18.05.2022.
//

import Combine
import Foundation

final class SearchScreenViewModel: ObservableObject {
    // input
    @Published var searchCompany = ""
    @Published var searchBarcode = ""
    @Published var company = ""
    // output
    @Published var isValid = false
    @Published var companyStatus: String = "–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É –∞–±–æ –∫–æ–º–ø–∞–Ω—ñ—ó —É —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–º—É –ø–æ–ª—ñ –Ω–∏–∂—á–µ –∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å —à—Ç—Ä–∏—Ö-–∫–æ–¥ —Å–∫–∞–Ω–µ—Ä–æ–º"
    @Published var companyCircle: String = "üá∫üá¶"
    @Published var ratingHide: Bool = false
    private var cancellableSet: Set<AnyCancellable> = []
    
    init() {
        $searchCompany
            .debounce(for: 0.3, scheduler: RunLoop.main)
            .removeDuplicates()
            .map { input in
                return input.count >= 3
            }
            .assign(to: \.isValid, on: self)
            .store(in: &cancellableSet)
    }
    func getbarcodeInfo() {
        if searchBarcode.isNumeric{
        FirebaseManager.shared.getPost(collection: "companyBarcode", docName: searchBarcode, completion: {doc in
            guard doc != nil else {return}
            self.searchCompany = doc?.name ?? "–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó"
            self.fetchAPI()
            if self.searchCompany == "–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó"{
                self.searchCompany = ""
            }
        })
        }else{
            self.companyStatus = "–û—Ç—Ä–∏–º–∞–Ω–∏–π —à—Ç—Ä–∏—Ö-–∫–æ–¥ –º—ñ—Å—Ç–∏—Ç—å –ø–æ–º–∏–ª–∫—É."
        }
    }
    func fetchAPI() {
        guard let search = self.searchCompany.addingPercentEncoding(withAllowedCharacters: .urlHostAllowed) else {
            self.companyStatus = "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É"
            return
        }
        guard let url = URL(string: "https://api.boycottrussiabot.com/v1/companies/search?name=\(search)") else {
            return
        }
        var request = URLRequest(url: url)
        request.setValue("application/json", forHTTPHeaderField: "Accept")
        request.setValue("Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJvbGVrc2lpLmlyemhhdnNreWlAZ21haWwuY29tIiwiYXV0aEtleSI6Im4yN21CbjNMZzljMVBwS2RVM0pCRk5VOGVLcTNUSGUyIiwicGVybWlzc2lvbnMiOlsiY29tcGFueV9hcGlfc2VhcmNoIl0sImlhdCI6MTY1MzA1NTc3MH0.y7OtF48xt1LNNahDM-So8Eq72IhJdFwBDmjCaCTJxQo", forHTTPHeaderField: "Authorization")
        URLSession.shared.dataTask(with: request) { data, _, _ in
            if let data = data {
                if let decodeStatus = try? JSONDecoder().decode(CompanyInfo.self, from: data) {
                    DispatchQueue.main.async {
                        if decodeStatus.isEmpty {
                            self.companyStatus="–¶—ñ—î—ó –∫–æ–º–ø–∞–Ω—ñ—ó —á–∏ —Ç–æ–≤–∞—Ä—É —â–µ –Ω–µ–º–∞—î –≤ –Ω–∞—à—ñ–π –±–∞–∑—ñ. –ü—Ä–æ—Ç–µ –º–∏ –≤–∂–µ —É –ø–æ—à—É–∫–∞—Ö"
                            self.companyCircle="ü§î"
                            self.ratingHide = false
                        } else {
                            self.companyStatus = self.getStatus(decodeStatus: decodeStatus)
                            self.company = decodeStatus[0].name!
                            self.ratingHide = true
                        }
                    }
                }
            }
        }.resume()
    }
    
    func addReaction(reaction: String) {
        FirebaseManager.shared.updateRating(company: company, reaction: reaction)
    }
    
    func getStatus (decodeStatus: CompanyInfo) -> String {
        if decodeStatus[0].status == "clear"{
            self.companyCircle="üü¢"
            return " \(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") –Ω–µ –≤–µ–¥–µ –±—ñ–∑–Ω–µ—Å –Ω–∞ —Ä–æ—Å—ñ—ó"
        }
        if decodeStatus[0].status == "russian"{
            self.companyCircle="üî¥"
            return "\(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") - –∫–æ–º–ø–∞–Ω—ñ—è –∫—Ä–∞—ó–Ω–∏-–∞–≥—Ä–µ—Å–æ—Ä–∞"
        }
        if decodeStatus[0].status == "not_out"{
            self.companyCircle="üî¥"
            return " –ë–æ–π–∫–æ—Ç! \(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è")  –Ω–µ –ø–æ–∫–∏–Ω—É–ª–∞ —Ä–∏–Ω–æ–∫ —Ä–æ—Å—ñ—ó!"
        }
        if decodeStatus[0].status == "darkness"{
            self.companyCircle="üü¢"
            return "\(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") –Ω–µ –≤–µ–¥–µ –±—ñ–∑–Ω–µ—Å –Ω–∞ —Ä–æ—Å—ñ—ó"
        }
        if decodeStatus[0].status == "ukrainian"{
            self.companyCircle="üá∫üá¶"
            return "\(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è")- –¶–µ –Ω–∞—à–µ, —É–∫—Ä–∞—ó–Ω—Å—å–∫–µ!"
        }
        if decodeStatus[0].status == "partially_out"{
            self.companyCircle="üü†"
            return " \(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") –∑–∞—è–≤–∏–ª–∞, —â–æ –ø—Ä–∏–∑—É–ø–∏–Ω—è—î –∞–±–æ —Å–∫–æ—Ä–æ—á—É—î —Å–≤–æ—é –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å –Ω–∞ —Ä–æ—Å—ñ—ó"
        }
        if decodeStatus[0].status == "out_of_ukraine"{
            self.companyCircle="üü†"
            return "\(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") –Ω–µ –≤–µ–¥–µ –±—ñ–∑–Ω–µ—Å –≤ –£–∫—Ä–∞—ó–Ω—ñ"
        }
        if decodeStatus[0].status == "publicly_silence"{
            self.companyCircle="üî¥"
            return "\(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") –∑–∞–º–æ–≤—á—É—î"
        }
        if decodeStatus[0].status == "russian_collaborator"{
            self.companyCircle="üî¥"
            return " \(decodeStatus[0].name ?? "–∫–æ–º–ø–∞–Ω—ñ—è") —î –∫–æ–ª–∞–±–æ—Ä–∞–Ω—Ç–æ–º"
        }
        return ""
    }
}

extension String {
   var isNumeric: Bool {
     return !(self.isEmpty) && self.allSatisfy { $0.isNumber }
   }
}
